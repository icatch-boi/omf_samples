ALL+=
Targets?=$(ALL)
###
all:preprc $(Targets)
###
GCC7.3 ?= 1
ifeq ($(GCC7.3), 1)
    PREFIX_= /opt/openwrt_toolchain/arm-openwrt-icatchtek-bsp4-glibc/bin/arm-openwrt-linux-gnueabi-
else
    PREFIX_= /opt/openwrt_toolchain/arm-openwrt-icatchtek-glibc/bin/arm-openwrt-linux-
endif
PREFIX?=$(PREFIX_)
LIBS_PATH ?= ../../lib
INCS_PATH ?= ../../include
OUT_PATH ?= ./out
###
GCC ?= ${PREFIX}gcc
GXX ?= ${PREFIX}g++
GSTRIP ?= ${PREFIX}strip
###
CFLAGS ?= -mcpu=cortex-a7 -mabi=aapcs -mfloat-abi=hard -mlittle-endian -mno-unaligned-access -pthread -rdynamic -fPIC -flax-vector-conversions -mfpu=neon-vfpv4 -Os -Wno-error=pointer-sign -Wno-error=char-subscripts -Wno-error=unused-but-set-variable -Wno-error=unused-function -funwind-tables -ffunction-sections
CXXFLAGS ?=
CXXFLAGS0 := ${CFLAGS} -std=c++11 -fpermissive -fexceptions -Woverloaded-virtual -Wreturn-type -pthread
LDFLAGS ?=
###
INCS += -I.
INCS += -I${INCS_PATH}/
INCS += -I${INCS_PATH}/core
INCS += -I${INCS_PATH}/misc
INCS += -I${INCS_PATH}/streaming
INCS += -I${INCS_PATH}/streaming/common
##
LIBS +=
###
OBJS +=
###
OBJS_+=
###
LDFLAGS0 := -Wl,--no-as-needed,--copy-dt-needed-entries
###
%.o:%.cpp
	@echo "compile cxx files..."
	$(GXX) $(INCS) $(CXXFLAGS) $(CXXFLAGS0) -c $^ -o $@

%.o:%.cc
	@echo "compile cxx files..."
	$(GXX) $(INCS) $(CXXFLAGS) $(CXXFLAGS0) -c $^ -o $@

%.o:%.c
	@echo "compile c files...."
	$(GCC) $(INCS) $(CFLAGS) -c $^ -o $@

%_:_%.o ${OBJS_}
	@echo $@
	$(GXX) $(INCS) $(CXXFLAGS) $(CXXFLAGS0) $^ $(LDFLAGS) $(LDFLAGS0) -L${LIBS_PATH} $($@LIBS) $(LIBS) -o $@

%.so:$(OBJS)
	@echo $@
	$(GXX) $(INCS) $(CXXFLAGS) $(CXXFLAGS0) $^ $(LDFLAGS) -shared -o $@

%.a:$(OBJS)
	@echo $@
	$(GXX) $(INCS) $(CXXFLAGS) $(CXXFLAGS0) $^ -o $@

###	
clean:
	@echo "Removing linked and compiled files......"
	rm -rf $(Targets) *.o ./out

###
install:all
	@mkdir -p $(OUT_PATH)
	@for tmp in $(Targets); \
	do \
		mv $$tmp $(OUT_PATH); \
	done

.PHONY : clean install printGccVersion printAll preprc

preprc: printGccVersion

printAll:
	@echo $(ALL)

gccVer := `$(GCC) -dumpversion`
printGccVersion:
	@echo $(gccVer)